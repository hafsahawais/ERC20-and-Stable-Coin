/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20, ERC20Interface } from "../ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200152b3803806200152b8339818101604052810190620000379190620003c1565b81600190805190602001906200004f92919062000174565b5080600290805190602001906200006892919062000174565b50620000843368056bc75e2d631000006200008c60201b60201c565b5050620005c3565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000fe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f590620004a7565b60405180910390fd5b8060008082825462000111919062000502565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000169919062000502565b925050819055505050565b82805462000182906200058e565b90600052602060002090601f016020900481019282620001a65760008555620001f2565b82601f10620001c157805160ff1916838001178555620001f2565b82800160010185558215620001f2579182015b82811115620001f1578251825591602001919060010190620001d4565b5b50905062000201919062000205565b5090565b5b808211156200022057600081600090555060010162000206565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200028d8262000242565b810181811067ffffffffffffffff82111715620002af57620002ae62000253565b5b80604052505050565b6000620002c462000224565b9050620002d2828262000282565b919050565b600067ffffffffffffffff821115620002f557620002f462000253565b5b620003008262000242565b9050602081019050919050565b60005b838110156200032d57808201518184015260208101905062000310565b838111156200033d576000848401525b50505050565b60006200035a6200035484620002d7565b620002b8565b9050828152602081018484840111156200037957620003786200023d565b5b620003868482856200030d565b509392505050565b600082601f830112620003a657620003a562000238565b5b8151620003b884826020860162000343565b91505092915050565b60008060408385031215620003db57620003da6200022e565b5b600083015167ffffffffffffffff811115620003fc57620003fb62000233565b5b6200040a858286016200038e565b925050602083015167ffffffffffffffff8111156200042e576200042d62000233565b5b6200043c858286016200038e565b9150509250929050565b600082825260208201905092915050565b7f6d696e7420746f207a65726f2061646472657373000000000000000000000000600082015250565b60006200048f60148362000446565b91506200049c8262000457565b602082019050919050565b60006020820190508181036000830152620004c28162000480565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200050f82620004c9565b91506200051c83620004c9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620005545762000553620004d3565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005a757607f821691505b602082108103620005bd57620005bc6200055f565b5b50919050565b610f5880620005d36000396000f3fe6080604052600436106100915760003560e01c806370a082311161005957806370a082311461019157806395d89b41146101ce578063a9059cbb146101f9578063dd62ed3e14610236578063f340fa011461027357610091565b806306fdde0314610096578063095ea7b3146100c157806318160ddd146100fe57806323b872dd14610129578063313ce56714610166575b600080fd5b3480156100a257600080fd5b506100ab61028f565b6040516100b8919061099b565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e39190610a56565b61031d565b6040516100f59190610ab1565b60405180910390f35b34801561010a57600080fd5b50610113610418565b6040516101209190610adb565b60405180910390f35b34801561013557600080fd5b50610150600480360381019061014b9190610af6565b61041e565b60405161015d9190610ab1565b60405180910390f35b34801561017257600080fd5b5061017b610584565b6040516101889190610b65565b60405180910390f35b34801561019d57600080fd5b506101b860048036038101906101b39190610b80565b61058d565b6040516101c59190610adb565b60405180910390f35b3480156101da57600080fd5b506101e36105a5565b6040516101f0919061099b565b60405180910390f35b34801561020557600080fd5b50610220600480360381019061021b9190610a56565b610633565b60405161022d9190610ab1565b60405180910390f35b34801561024257600080fd5b5061025d60048036038101906102589190610bad565b610648565b60405161026a9190610adb565b60405180910390f35b61028d60048036038101906102889190610b80565b61066d565b005b6001805461029c90610c1c565b80601f01602080910402602001604051908101604052809291908181526020018280546102c890610c1c565b80156103155780601f106102ea57610100808354040283529160200191610315565b820191906000526020600020905b8154815290600101906020018083116102f857829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361038d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038490610c99565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60005481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da90610d05565b60405180910390fd5b82816104ef9190610d54565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061057a85858561067a565b9150509392505050565b60006012905090565b60036020528060005260406000206000915090505481565b600280546105b290610c1c565b80601f01602080910402602001604051908101604052809291908181526020018280546105de90610c1c565b801561062b5780601f106106005761010080835404028352916020019161062b565b820191906000526020600020905b81548152906001019060200180831161060e57829003601f168201915b505050505081565b600061064033848461067a565b905092915050565b6004602052816000526040600020602052806000526040600020600091509150505481565b6106778134610821565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e190610dd4565b60405180910390fd5b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828111610770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076790610e40565b60405180910390fd5b828161077c9190610d54565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461080e9190610e60565b9250508190555060019150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088790610f02565b60405180910390fd5b806000808282546108a19190610e60565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108f79190610e60565b925050819055505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561093c578082015181840152602081019050610921565b8381111561094b576000848401525b50505050565b6000601f19601f8301169050919050565b600061096d82610902565b610977818561090d565b935061098781856020860161091e565b61099081610951565b840191505092915050565b600060208201905081810360008301526109b58184610962565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109ed826109c2565b9050919050565b6109fd816109e2565b8114610a0857600080fd5b50565b600081359050610a1a816109f4565b92915050565b6000819050919050565b610a3381610a20565b8114610a3e57600080fd5b50565b600081359050610a5081610a2a565b92915050565b60008060408385031215610a6d57610a6c6109bd565b5b6000610a7b85828601610a0b565b9250506020610a8c85828601610a41565b9150509250929050565b60008115159050919050565b610aab81610a96565b82525050565b6000602082019050610ac66000830184610aa2565b92915050565b610ad581610a20565b82525050565b6000602082019050610af06000830184610acc565b92915050565b600080600060608486031215610b0f57610b0e6109bd565b5b6000610b1d86828701610a0b565b9350506020610b2e86828701610a0b565b9250506040610b3f86828701610a41565b9150509250925092565b600060ff82169050919050565b610b5f81610b49565b82525050565b6000602082019050610b7a6000830184610b56565b92915050565b600060208284031215610b9657610b956109bd565b5b6000610ba484828501610a0b565b91505092915050565b60008060408385031215610bc457610bc36109bd565b5b6000610bd285828601610a0b565b9250506020610be385828601610a0b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c3457607f821691505b602082108103610c4757610c46610bed565b5b50919050565b7f617070726f766520746f207a65726f2061646472657373000000000000000000600082015250565b6000610c8360178361090d565b9150610c8e82610c4d565b602082019050919050565b60006020820190508181036000830152610cb281610c76565b9050919050565b7f616d6f756e74206578636565647320616c6c6f77616e63650000000000000000600082015250565b6000610cef60188361090d565b9150610cfa82610cb9565b602082019050919050565b60006020820190508181036000830152610d1e81610ce2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5f82610a20565b9150610d6a83610a20565b925082821015610d7d57610d7c610d25565b5b828203905092915050565b7f7472616e7366657220746f20746865207a65726f206164647265737300000000600082015250565b6000610dbe601c8361090d565b9150610dc982610d88565b602082019050919050565b60006020820190508181036000830152610ded81610db1565b9050919050565b7f7472616e7366657220616d6f756e7420657863656564732062616c616e636500600082015250565b6000610e2a601f8361090d565b9150610e3582610df4565b602082019050919050565b60006020820190508181036000830152610e5981610e1d565b9050919050565b6000610e6b82610a20565b9150610e7683610a20565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eab57610eaa610d25565b5b828201905092915050565b7f6d696e7420746f207a65726f2061646472657373000000000000000000000000600082015250565b6000610eec60148361090d565b9150610ef782610eb6565b602082019050919050565b60006020820190508181036000830152610f1b81610edf565b905091905056fea264697066735822122070e68ccd83ccf26c01ad021c0dc3974efeb2256d65020a5b3f0eb42f78a5867864736f6c634300080d0033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<ERC20>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
